name: Release

on:
  push:
    tags: ['v*']
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-arm64:
    runs-on: arc-arm64-runner
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Generate image tag
        id: set-tag
        run: |
          SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")
          TIMESTAMP=$(date +%s)

          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            TAG="${{ github.ref_name }}"
          else
            TAG="${{ github.ref_name }}-${SHORT_SHA}-${TIMESTAMP}"
          fi

          echo "TAG=$TAG" >> $GITHUB_OUTPUT
        shell: bash

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=ref,event=branch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: arm64-buildx-${{ github.sha }}
          restore-keys: |
            arm64-buildx-

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v6
        with:
          context: .
          provenance: false
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.set-tag.outputs.TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
